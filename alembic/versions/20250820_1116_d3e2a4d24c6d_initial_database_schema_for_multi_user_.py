"""Initial database schema for multi-user Zeno system

Revision ID: d3e2a4d24c6d
Revises: 
Create Date: 2025-08-20 11:16:49.081097

"""

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = "d3e2a4d24c6d"
down_revision = None
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "users",
        sa.Column("clerk_user_id", sa.String(), nullable=False),
        sa.Column("email", sa.String(), nullable=False),
        sa.Column("first_name", sa.String(), nullable=True),
        sa.Column("last_name", sa.String(), nullable=True),
        sa.Column("timezone", sa.String(), nullable=True),
        sa.Column("preferences", sa.JSON(), nullable=True),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.Column("updated_at", sa.DateTime(), nullable=True),
        sa.Column("last_active_at", sa.DateTime(), nullable=True),
        sa.Column("is_active", sa.Boolean(), nullable=True),
        sa.PrimaryKeyConstraint("clerk_user_id"),
    )
    op.create_index(op.f("ix_users_email"), "users", ["email"], unique=True)
    op.create_table(
        "integrations",
        sa.Column("id", sa.String(), nullable=False),
        sa.Column("user_id", sa.String(), nullable=False),
        sa.Column("integration_type", sa.String(), nullable=False),
        sa.Column("provider", sa.String(), nullable=False),
        sa.Column("auth_tokens", sa.JSON(), nullable=True),
        sa.Column("config_data", sa.JSON(), nullable=True),
        sa.Column("is_active", sa.Boolean(), nullable=True),
        sa.Column("token_expires_at", sa.DateTime(), nullable=True),
        sa.Column("last_sync_at", sa.DateTime(), nullable=True),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.Column("updated_at", sa.DateTime(), nullable=True),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["users.clerk_user_id"],
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("user_id", "integration_type", "provider", name="uq_user_integration"),
    )
    op.create_index(
        "idx_integrations_user_type", "integrations", ["user_id", "integration_type"], unique=False
    )
    op.create_index(op.f("ix_integrations_user_id"), "integrations", ["user_id"], unique=False)
    op.create_table(
        "notifications",
        sa.Column("id", sa.String(), nullable=False),
        sa.Column("user_id", sa.String(), nullable=False),
        sa.Column("notification_type", sa.String(), nullable=False),
        sa.Column("title", sa.String(), nullable=False),
        sa.Column("message", sa.Text(), nullable=True),
        sa.Column("delivery_method", sa.String(), nullable=True),
        sa.Column("delivery_config", sa.JSON(), nullable=True),
        sa.Column("scheduled_for", sa.DateTime(), nullable=True),
        sa.Column("status", sa.String(), nullable=True),
        sa.Column("payload", sa.JSON(), nullable=True),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.Column("sent_at", sa.DateTime(), nullable=True),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["users.clerk_user_id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        "idx_notifications_scheduled", "notifications", ["scheduled_for", "status"], unique=False
    )
    op.create_index(
        "idx_notifications_user_status", "notifications", ["user_id", "status"], unique=False
    )
    op.create_index(op.f("ix_notifications_user_id"), "notifications", ["user_id"], unique=False)
    op.create_table(
        "user_sessions",
        sa.Column("id", sa.String(), nullable=False),
        sa.Column("user_id", sa.String(), nullable=False),
        sa.Column("session_type", sa.String(), nullable=False),
        sa.Column("agent_type", sa.String(), nullable=False),
        sa.Column("conversation_state", sa.JSON(), nullable=True),
        sa.Column("agent_context", sa.JSON(), nullable=True),
        sa.Column("shared_data", sa.JSON(), nullable=True),
        sa.Column("started_at", sa.DateTime(), nullable=False),
        sa.Column("last_activity_at", sa.DateTime(), nullable=True),
        sa.Column("ended_at", sa.DateTime(), nullable=True),
        sa.Column("is_active", sa.Boolean(), nullable=True),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["users.clerk_user_id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        "idx_user_sessions_active", "user_sessions", ["user_id", "is_active"], unique=False
    )
    op.create_index(
        "idx_user_sessions_type", "user_sessions", ["user_id", "session_type"], unique=False
    )
    op.create_index(op.f("ix_user_sessions_user_id"), "user_sessions", ["user_id"], unique=False)
    op.create_table(
        "briefings",
        sa.Column("id", sa.String(), nullable=False),
        sa.Column("user_id", sa.String(), nullable=False),
        sa.Column("session_id", sa.String(), nullable=True),
        sa.Column("briefing_date", sa.Date(), nullable=False),
        sa.Column("briefing_type", sa.String(), nullable=True),
        sa.Column("calendar_data", sa.JSON(), nullable=True),
        sa.Column("weather_data", sa.JSON(), nullable=True),
        sa.Column("task_data", sa.JSON(), nullable=True),
        sa.Column("email_data", sa.JSON(), nullable=True),
        sa.Column("user_goals", sa.JSON(), nullable=True),
        sa.Column("formatted_content", sa.Text(), nullable=True),
        sa.Column("summary", sa.Text(), nullable=True),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.ForeignKeyConstraint(
            ["session_id"],
            ["user_sessions.id"],
        ),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["users.clerk_user_id"],
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint(
            "user_id", "briefing_date", "briefing_type", name="uq_user_briefing_date_type"
        ),
    )
    op.create_index(
        "idx_briefings_user_date", "briefings", ["user_id", "briefing_date"], unique=False
    )
    op.create_index(op.f("ix_briefings_user_id"), "briefings", ["user_id"], unique=False)
    op.create_table(
        "chat_history",
        sa.Column("id", sa.String(), nullable=False),
        sa.Column("user_id", sa.String(), nullable=False),
        sa.Column("session_id", sa.String(), nullable=False),
        sa.Column("message_type", sa.String(), nullable=False),
        sa.Column("content", sa.Text(), nullable=False),
        sa.Column("agent_type", sa.String(), nullable=True),
        sa.Column("message_metadata", sa.JSON(), nullable=True),
        sa.Column("context_tags", sa.JSON(), nullable=True),
        sa.Column("content_vector", sa.JSON(), nullable=True),
        sa.Column("relevance_score", sa.Float(), nullable=True),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.ForeignKeyConstraint(
            ["session_id"],
            ["user_sessions.id"],
        ),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["users.clerk_user_id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        "idx_chat_history_message_type", "chat_history", ["user_id", "message_type"], unique=False
    )
    op.create_index(
        "idx_chat_history_user_date", "chat_history", ["user_id", "created_at"], unique=False
    )
    op.create_index(
        "idx_chat_history_user_session", "chat_history", ["user_id", "session_id"], unique=False
    )
    op.create_index(
        op.f("ix_chat_history_session_id"), "chat_history", ["session_id"], unique=False
    )
    op.create_index(op.f("ix_chat_history_user_id"), "chat_history", ["user_id"], unique=False)
    op.create_table(
        "documents",
        sa.Column("id", sa.String(), nullable=False),
        sa.Column("user_id", sa.String(), nullable=False),
        sa.Column("created_by_session_id", sa.String(), nullable=True),
        sa.Column("document_type", sa.String(), nullable=False),
        sa.Column("title", sa.String(), nullable=False),
        sa.Column("external_id", sa.String(), nullable=True),
        sa.Column("external_url", sa.String(), nullable=True),
        sa.Column("content_summary", sa.Text(), nullable=True),
        sa.Column("content_metadata", sa.JSON(), nullable=True),
        sa.Column("tags", sa.JSON(), nullable=True),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.Column("updated_at", sa.DateTime(), nullable=True),
        sa.ForeignKeyConstraint(
            ["created_by_session_id"],
            ["user_sessions.id"],
        ),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["users.clerk_user_id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        "idx_documents_user_type", "documents", ["user_id", "document_type"], unique=False
    )
    op.create_index(op.f("ix_documents_user_id"), "documents", ["user_id"], unique=False)
    op.create_table(
        "knowledge_items",
        sa.Column("id", sa.String(), nullable=False),
        sa.Column("user_id", sa.String(), nullable=False),
        sa.Column("session_id", sa.String(), nullable=True),
        sa.Column("item_type", sa.String(), nullable=False),
        sa.Column("title", sa.String(), nullable=True),
        sa.Column("content", sa.Text(), nullable=False),
        sa.Column("tags", sa.JSON(), nullable=True),
        sa.Column("context_data", sa.JSON(), nullable=True),
        sa.Column("content_vector", sa.JSON(), nullable=True),
        sa.Column("relevance_score", sa.Float(), nullable=True),
        sa.Column("confidence_score", sa.Float(), nullable=True),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.Column("updated_at", sa.DateTime(), nullable=True),
        sa.Column("last_accessed_at", sa.DateTime(), nullable=True),
        sa.ForeignKeyConstraint(
            ["session_id"],
            ["user_sessions.id"],
        ),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["users.clerk_user_id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        "idx_knowledge_items_relevance",
        "knowledge_items",
        ["user_id", "relevance_score"],
        unique=False,
    )
    op.create_index(
        "idx_knowledge_items_user_type", "knowledge_items", ["user_id", "item_type"], unique=False
    )
    op.create_index(
        op.f("ix_knowledge_items_user_id"), "knowledge_items", ["user_id"], unique=False
    )
    op.create_table(
        "tasks",
        sa.Column("id", sa.String(), nullable=False),
        sa.Column("user_id", sa.String(), nullable=False),
        sa.Column("created_by_session_id", sa.String(), nullable=True),
        sa.Column("title", sa.String(), nullable=False),
        sa.Column("description", sa.Text(), nullable=True),
        sa.Column("priority", sa.Integer(), nullable=True),
        sa.Column("category", sa.String(), nullable=True),
        sa.Column("status", sa.String(), nullable=True),
        sa.Column("due_date", sa.Date(), nullable=True),
        sa.Column("reminder_time", sa.DateTime(), nullable=True),
        sa.Column("task_metadata", sa.JSON(), nullable=True),
        sa.Column("tags", sa.JSON(), nullable=True),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.Column("updated_at", sa.DateTime(), nullable=True),
        sa.Column("completed_at", sa.DateTime(), nullable=True),
        sa.ForeignKeyConstraint(
            ["created_by_session_id"],
            ["user_sessions.id"],
        ),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["users.clerk_user_id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index("idx_tasks_due_date", "tasks", ["due_date"], unique=False)
    op.create_index("idx_tasks_user_priority", "tasks", ["user_id", "priority"], unique=False)
    op.create_index("idx_tasks_user_status", "tasks", ["user_id", "status"], unique=False)
    op.create_index(op.f("ix_tasks_user_id"), "tasks", ["user_id"], unique=False)
    op.create_table(
        "daily_plans",
        sa.Column("id", sa.String(), nullable=False),
        sa.Column("user_id", sa.String(), nullable=False),
        sa.Column("session_id", sa.String(), nullable=True),
        sa.Column("plan_date", sa.Date(), nullable=False),
        sa.Column("plan_type", sa.String(), nullable=True),
        sa.Column("user_goals", sa.JSON(), nullable=True),
        sa.Column("planned_tasks", sa.JSON(), nullable=True),
        sa.Column("schedule_blocks", sa.JSON(), nullable=True),
        sa.Column("notes", sa.Text(), nullable=True),
        sa.Column("document_id", sa.String(), nullable=True),
        sa.Column("email_draft", sa.JSON(), nullable=True),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.Column("updated_at", sa.DateTime(), nullable=True),
        sa.ForeignKeyConstraint(
            ["document_id"],
            ["documents.id"],
        ),
        sa.ForeignKeyConstraint(
            ["session_id"],
            ["user_sessions.id"],
        ),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["users.clerk_user_id"],
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("user_id", "plan_date", "plan_type", name="uq_user_plan_date_type"),
    )
    op.create_index(
        "idx_daily_plans_user_date", "daily_plans", ["user_id", "plan_date"], unique=False
    )
    op.create_index(op.f("ix_daily_plans_user_id"), "daily_plans", ["user_id"], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f("ix_daily_plans_user_id"), table_name="daily_plans")
    op.drop_index("idx_daily_plans_user_date", table_name="daily_plans")
    op.drop_table("daily_plans")
    op.drop_index(op.f("ix_tasks_user_id"), table_name="tasks")
    op.drop_index("idx_tasks_user_status", table_name="tasks")
    op.drop_index("idx_tasks_user_priority", table_name="tasks")
    op.drop_index("idx_tasks_due_date", table_name="tasks")
    op.drop_table("tasks")
    op.drop_index(op.f("ix_knowledge_items_user_id"), table_name="knowledge_items")
    op.drop_index("idx_knowledge_items_user_type", table_name="knowledge_items")
    op.drop_index("idx_knowledge_items_relevance", table_name="knowledge_items")
    op.drop_table("knowledge_items")
    op.drop_index(op.f("ix_documents_user_id"), table_name="documents")
    op.drop_index("idx_documents_user_type", table_name="documents")
    op.drop_table("documents")
    op.drop_index(op.f("ix_chat_history_user_id"), table_name="chat_history")
    op.drop_index(op.f("ix_chat_history_session_id"), table_name="chat_history")
    op.drop_index("idx_chat_history_user_session", table_name="chat_history")
    op.drop_index("idx_chat_history_user_date", table_name="chat_history")
    op.drop_index("idx_chat_history_message_type", table_name="chat_history")
    op.drop_table("chat_history")
    op.drop_index(op.f("ix_briefings_user_id"), table_name="briefings")
    op.drop_index("idx_briefings_user_date", table_name="briefings")
    op.drop_table("briefings")
    op.drop_index(op.f("ix_user_sessions_user_id"), table_name="user_sessions")
    op.drop_index("idx_user_sessions_type", table_name="user_sessions")
    op.drop_index("idx_user_sessions_active", table_name="user_sessions")
    op.drop_table("user_sessions")
    op.drop_index(op.f("ix_notifications_user_id"), table_name="notifications")
    op.drop_index("idx_notifications_user_status", table_name="notifications")
    op.drop_index("idx_notifications_scheduled", table_name="notifications")
    op.drop_table("notifications")
    op.drop_index(op.f("ix_integrations_user_id"), table_name="integrations")
    op.drop_index("idx_integrations_user_type", table_name="integrations")
    op.drop_table("integrations")
    op.drop_index(op.f("ix_users_email"), table_name="users")
    op.drop_table("users")
    # ### end Alembic commands ###
